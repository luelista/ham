esphome:
  name: gpn17badge
  includes:
    - pca9571.h
    - disp_test.h
  platformio_options:
    board_build.flash_mode: dio
  libraries:
    #- sumotoy/TFT_ILI9163=
    - SPI
    - https://github.com/adafruit/Adafruit-GFX-Library.git#1.2.2
    #- adafruit/Adafruit GFX Library
    - https://github.com/luelista/TFT_ILI9163C_gpn17badge.git#master

  on_boot:
    priority: 800
    then:
     - script.execute: test_disp_script

esp8266:
  board: nodemcuv2


# Enable logging
logger:
  level: DEBUG

ota:
  password: !secret iot_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

web_server:
  port: 80
  ota: false

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key
  
time:
  - platform: homeassistant
    id: homeassistant_time

spi:
  clk_pin: GPIO14
  mosi_pin: GPIO13
  miso_pin: GPIO12

i2c:
  sda: GPIO9
  scl: GPIO10
  scan: true
  id: bus_a
  frequency: 10kHz



custom_component:
  - lambda: |-
      auto my_custom = new PCA9571Component();
      return {my_custom};
    components:
    - id: multiplexer
    
  - lambda: |-
      auto my_custom2 = new ILI9163CTestComponent();
      return {my_custom2};
    components:
    - id: disp_test

switch:
  - platform: template
    name: "Vibrate"
    optimistic: true
    turn_on_action:
      - lambda: !lambda
          ((PCA9571Component*)multiplexer)->set_vibrate(true);
    turn_off_action:
      - lambda: !lambda
          ((PCA9571Component*)multiplexer)->set_vibrate(false);
    
  - platform: template
    name: "LCD Backlight"
    id: lcd_backlight
    optimistic: true
    turn_on_action:
      - lambda: !lambda
          ((PCA9571Component*)multiplexer)->set_lcd_backlight(true);
    turn_off_action:
      - lambda: !lambda
          ((PCA9571Component*)multiplexer)->set_lcd_backlight(false);

sensor:
  - platform: template
    name: Battery Level
    lambda: |-
      ((PCA9571Component*)multiplexer)->select_analog(ANALOG_BATLVL);
      delay(10);
      return analogRead(A0);
    update_interval: 20s


interval:
  - interval: 0.2s
    then:
      - lambda: |-
          ((PCA9571Component*)multiplexer)->select_analog(ANALOG_JOYSTK);
          delay(5);
          int value = analogRead(0);
          if (value > 430 && value < 530)
            id(joystick_right).publish_state(true);
          else
            id(joystick_right).publish_state(false);
          if (value > 530 && value < 630)
            id(joystick_down).publish_state(true);
          else
            id(joystick_down).publish_state(false);
          if (value > 670 && value < 770)
            id(joystick_up).publish_state(true);
          else
            id(joystick_up).publish_state(false);
          if (value > 910)
            id(joystick_left).publish_state(true);
          else
            id(joystick_left).publish_state(false);



remote_transmitter:
  pin: GPIO5
  carrier_duty_percent: 50%

# Individual switches
button:
  - platform: template
    name: "JVC Power"
    on_press:
      remote_transmitter.transmit_jvc:
        data: 0x00ff

  - platform: template
    name: "Vol +"
    on_press:
      remote_transmitter.transmit_jvc:
        data: 0x48B7

  - platform: template
    name: "Vol -"
    on_press:
      remote_transmitter.transmit_jvc:
        data: 0xD02F


binary_sensor:

  - platform: template
    id: joystick_left
    on_press:
      - lambda: |-
          ESP_LOGI("joystick", "Left");

  - platform: template
    id: joystick_right
    on_press:
      - lambda: |-
          ESP_LOGI("joystick", "Right");

  - platform: template
    id: joystick_up
    on_press:
      - lambda: |-
          ESP_LOGI("joystick", "Up");
      - remote_transmitter.transmit_jvc:
          data: 0x48B7

  - platform: template
    id: joystick_down
    on_press:
      - lambda: |-
          ESP_LOGI("joystick", "Down");
      - remote_transmitter.transmit_jvc:
          data: 0xD02F

  - platform: gpio
    pin:
      number: GPIO16
      mode:
        input: true
        pulldown: true
    name: "Joystick Button"
    on_press:
      - remote_transmitter.transmit_jvc:
          data: 0x00ff

      - switch.toggle: lcd_backlight

# display:
#   - platform: ili9341
#     model: TFT 2.4
#     cs_pin: GPIO15
#     dc_pin: GPIO0
#     #led_pin: 32  ### see note below ###
#     #reset_pin: 33

#     lambda: |-
#       it.fill(Color::BLACK);
#       it.print(0, 0, id(my_font), id(my_red), TextAlign::TOP_LEFT, "Hello World!")


script:
  - id: test_disp_script
    mode: restart     # Light will be kept on during 1 minute since
                      # the latest time the script is executed
    then:
      - delay: 1 sec
      - switch.turn_on: lcd_backlight
      - delay: 2 sec
      - lambda: |-
          ((ILI9163CTestComponent*)disp_test)->initialize();
      - delay: 1 min
      - switch.turn_off: lcd_backlight

